#!/bin/bash

SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

trans_2_utf8() {
file=$1
FILE_UTF16=$(file $1 | grep -i "utf-16")
if [[ "$FILE_UTF16" != "" ]];then
    echo "file format utf-16"
    iconv -f utf-16le -t utf-8 $1 > utf8-$1
    file=utf8-$1
fi
echo $file
}

controller_info_get() {
CONTROLLER_KEYWORD=$1
file=$2
LEFT_KEYWORD=${CONTROLLER_KEYWORD}left
RIGHT_KEYWORD=${CONTROLLER_KEYWORD}right
#3. left controller version
TEMP=""
RESULT=""
ORI=`grep -aiE $LEFT_KEYWORD ${file}`
for i in $ORI
do
    TEMP=`echo ${i#*sw:}`
    TEMP=`echo ${TEMP%%,*}`
    res=$(echo $RESULT | grep "${TEMP: 0:6}")
    if [[ "$res" = "" ]];then
        if [[ $RESULT = "" ]];then
            RESULT=${TEMP: 0:6}
        else
            RESULT=${RESULT},${TEMP: 0:6}
        fi
    fi
done
echo -e "\033[32m LEFT: \t\t$RESULT\033[0m"

#4. right controller version
TEMP=""
RESULT=""
ORI=`grep -aiE $RIGHT_KEYWORD ${file}`
for i in $ORI
do
    TEMP=`echo ${i#*sw:}`
    TEMP=`echo ${TEMP%%,*}`
    res=$(echo $RESULT | grep "${TEMP: 0:6}")
    if [[ "$res" = "" ]];then
        if [[ $RESULT = "" ]];then
            RESULT=${TEMP: 0:6}
        else
            RESULT=${RESULT},${TEMP: 0:6}
        fi
    fi
done
echo -e "\033[32m RIGHT: \t\t$RESULT\033[0m"
echo ""
TEMP=`grep -aiE $LEFT_KEYWORD ${file} | head -n1`
echo "${TEMP#*$CONTROLLER_KEYWORD}"
TEMP=`grep -aiE $RIGHT_KEYWORD ${file} | head -n1`
echo "${TEMP#*$CONTROLLER_KEYWORD}"
}

#if [ $# -lt 1 ];then
#    echo "Please Input a log txt, \$#=$#"
#    exit
#elif [ $# = 1 ];then
#    file=`trans_2_utf8 $1`
#else
#    rm a.txt 2>/dev/null
#    para=`sort -r $*`
#    echo para:$para
#    for i in $*
#    do
#        file=`trans_2_utf8 $i`
#        echo $file
#        cat $file >> a.txt
#    done
#    file=a.txt
#fi

file=`trans_2_utf8 $1`

echo "Input $# files"

grep -ainE ":stlog:" ${file} --color=auto

echo ""
echo -e "=======================================================\n"
echo ""

#permissive=0'
#'bb 01 01'
KEY="
'Stationservice: L1:Starting'
'camera res'
'enterpairing'
'stoppairing'
'usbpairing'
'system_vrmode'
'\[mcu\]powero'
'devinfo:'
'come in wakeup'
'come in sleep'
'gotosleep,'
'L1:left controller connected'
'L1:right controller connected'
'get_imu_cali_thread'
'controller disconnect'
'controller info:'
'camerainit'
'camerargbsync'
'camerastreamctrl'
'>>> \/'
'reset station'
'scontext=u:r:stationservice:s0'
'tcontext=u:r:stationservice:s0'
'stationclient_test'
'stationexceptionreset'
'initSharedMemory, mmap_fd=-'
'updatefw'
'stationbootromstart'
'stationotastart'
'updatefw'
'----controller upgrade---'
'UpgradePageTracker-->reportUpgradeResultShow'
'controller: /storage/emulated'
'bootrom'
'station update'
'pairmode'
'do_inplay618_controller_update'
'do_inplay618_station_update'
'do_inplay618_station_update'
'RBWrite overflow RightShift'
'RBWrite overflow RightShift'
'GetCalibrationFromStation:mcu recv wrong'
'get calibration data successfully'
':aa 01 04 01'
']bb 01 04 01'
']a5 02 01'
']a5 02 02'
']a5 07 00'
']a5 06 '
"

#'mControllerStillFlag_'
KEYWORDS=`echo -e ${KEY} | sed "s/' '/|/g"`
KEYWORDS=`echo -e ${KEYWORDS} | sed "s/'//g"`
echo $KEYWORDS
grep -ainE "${KEYWORDS}" ${file} --color=auto



fileo=ss.${file}
grep -aiE "${KEYWORDS}|stationservice|stationclient" ${file} > ${fileo}
echo "output in ${fileo}"

echo ""
echo -e "=======================================================\n"

#0. hardware info
KEY_H="come in wakeup, "
OS_VERSION=`grep -aiE $KEY_H ${file} | head -n 1`
OS_VERSION=`echo ${OS_VERSION#*come in wakeup, }`
echo -e "\033[32m HW_INFO: \t${OS_VERSION} \033[0m"

#1. os version
OS_VERSION=`grep -aiE 'os_rom_version' ${file} | head -n 1`
OS_VERSION=`echo -e ${OS_VERSION} | sed 's/"//g'`
OS_VERSION=`echo -e ${OS_VERSION} | sed 's/:/=/g'`
OS_VERSION=`echo -e ${OS_VERSION} | sed 's/&/,/g'`
OS_VERSION=`echo ${OS_VERSION#*os_rom_version=}`
OS_VERSION=${OS_VERSION%%,*}
echo -e "\033[32m OS_VERSION: \t${OS_VERSION}\033[0m"

#2. station version
STATION_KEYWORD="DEVINFO:"
STAION_VERSION_ORI=`grep -aE $STATION_KEYWORD ${file} | sort -u`
for i in $STAION_VERSION_ORI
do
    STATION_VER=`echo ${i#*$STATION_KEYWORD} | tr -d " "`
    #ignore null line
    if [[ $STATION_VER = "" ]];then
        continue
    fi
    #ignore the same version 
    res=$(echo $STATION_VERSION | grep "${STATION_VER: 0:6}")
    if [[ "$res" = "" ]];then
        if [[ $STATION_VERSION = "" ]];then
            STATION_VERSION=${STATION_VER: 0:6}
        else
            STATION_VERSION=${STATION_VERSION},${STATION_VER: 0:6}
        fi
    fi
done
echo -e "\033[32m STATION: \t$STATION_VERSION \033[0m"

CONTROLLER_KEYWORD="controller info:"
ORI=`grep -aiE $CONTROLLER_KEYWORD ${file}`
if [[ "$ORI" = "" ]];then
    CONTROLLER_KEYWORD="get_imu_cali_thread "
fi
controller_info_get $CONTROLLER_KEYWORD $file



IFS=$SAVEIFS

