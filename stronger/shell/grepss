#!/bin/bash

SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

trans_2_utf8() {
    file=$1
    if [ ! -f $file ];then
        echo "$file is not a file"
    fi
    FILE_UTF16=$(file $1 | grep -i "utf-16")
    if [[ "$FILE_UTF16" != "" ]];then
        echo "file format utf-16"
        iconv -f utf-16le -t utf-8 $1 > utf8-$1
        file=utf8-$1
    fi
    echo $file
}

get_pid_by_keyword() {
    file=$1
    KEYWORD=$2
    pid=`grep -aiE $KEYWORD ${file} | head -n 1`
    pid=`echo $pid | awk -F " " '{print $3}'`
    echo $pid
}

controller_info_get() {
    CONTROLLER_KEYWORD=$1
    file=$2
    LEFT_KEYWORD=${CONTROLLER_KEYWORD}left
    RIGHT_KEYWORD=${CONTROLLER_KEYWORD}right
    #3. left controller version
    TEMP=""
    RESULT=""
    ORI=`grep -aiE $LEFT_KEYWORD ${file}`
    for i in $ORI
    do
        TEMP=`echo ${i#*sw:}`
        TEMP=`echo ${TEMP%%,*}`
        res=$(echo $RESULT | grep "${TEMP: 0:6}")
        if [[ "$res" = "" ]];then
            if [[ $RESULT = "" ]];then
                RESULT=${TEMP: 0:6}
            else
                RESULT=${RESULT},${TEMP: 0:6}
            fi
        fi
    done
    echo -e "\033[32m LEFT: \t\t$RESULT\033[0m"

    #4. right controller version
    TEMP=""
    RESULT=""
    ORI=`grep -aiE $RIGHT_KEYWORD ${file}`
    for i in $ORI
    do
        TEMP=`echo ${i#*sw:}`
        TEMP=`echo ${TEMP%%,*}`
        res=$(echo $RESULT | grep "${TEMP: 0:6}")
        if [[ "$res" = "" ]];then
            if [[ $RESULT = "" ]];then
                RESULT=${TEMP: 0:6}
            else
                RESULT=${RESULT},${TEMP: 0:6}
            fi
        fi
    done
    echo -e "\033[32m RIGHT: \t\t$RESULT\033[0m"
    echo ""
    TEMP=`grep -aiE $LEFT_KEYWORD ${file} | head -n1`
    echo "${TEMP#*$CONTROLLER_KEYWORD}"
    TEMP=`grep -aiE $RIGHT_KEYWORD ${file} | head -n1`
    echo "${TEMP#*$CONTROLLER_KEYWORD}"
}

#if [ $# -lt 1 ];then
#    echo "Please Input a log txt, \$#=$#"
#    exit
#elif [ $# = 1 ];then
#    file=`trans_2_utf8 $1`
#else
#    rm a.txt 2>/dev/null
#    para=`sort -r $*`
#    echo para:$para
#    for i in $*
#    do
#        file=`trans_2_utf8 $i`
#        echo $file
#        cat $file >> a.txt
#    done
#    file=a.txt
#fi

file=$1
if [ $1 = '-t' ];then
    file=$2
    PARA_ADD='|trackingservice'
fi

file=`trans_2_utf8 $file`

echo "Input $# files"

grep -anE "STLOG:" ${file} --color=auto

echo ""
echo "----------------------------------------------------------------------------------------------------------"
echo ""

KEY="
'Stationservice: L1:Starting'
'--------- beginning of'
'camera res'
'enterpairing'
'stoppairing'
'usbpairing'
'system_vrmode'
'\[mcu\]powero'
'devinfo:'
'come in wakeup'
'come in sleep'
'gotosleep,'
'L1:left controller connected'
'L1:right controller connected'
'get_imu_cali_thread'
'controller disconnect'
'controller info:'
'camerainit'
'camerargbsync'
'camerastreamctrl'
'>>> \/'
'reset station'
'scontext=u:r:stationservice:s0'
'tcontext=u:r:stationservice:s0'
'stationclient_test'
'Stationclienttest'
'stationexceptionreset'
'initSharedMemory, mmap_fd=-'
'updatefw'
'stationbootromstart'
'stationotastart'
'updatefw'
'----controller upgrade---'
'UpgradePageTracker-->reportUpgradeResultShow'
'controller: /storage/emulated'
'bootrom'
'station update'
'pairmode'
'do_inplay618_controller_update'
'do_inplay618_station_update'
'RBWrite overflow RightShift'
'GetCalibrationFromStation:mcu recv wrong'
'GetCalibrationFromStation:mcu recv cali'
'GetCalibrationFromStation'
'controller get calibration data timeout'
'get calibration data successfully'
'================6dof camera'
':aa 01 04 01'
']bb 01 04 01'
']a5 02 01'
']a5 02 02'
']a5 07 00'
']a5 06 '
'手柄已断开连接'
'qcom,qup_uart'
#'permissive=0'
#'bb 01 01'
#':aa 01 fa'
#'SlpiDataAnalyze'
#'keyDataAnalyze'
#'imuDataAnalyze'
"
CHATTY_LOG="|I chatty  : uid="

KEYWORDS=`echo -e ${KEY} | sed "s/' '/|/g"`
KEYWORDS=`echo -e ${KEYWORDS} | sed "s/'//g"`
KEYWORDS=`echo "$KEYWORDS" | awk -F '#' '{print $1}'`
KEYWORDS=${KEYWORDS::-1} #cut last 1 chars
KEYWORDS_EXPAND=$KEYWORDS$CHATTY_LOG

FILE_TMP="ss.tmp"
SS_KEY="E Stationservice: L"
grep -ainE "${KEYWORDS_EXPAND}" ${file} > $FILE_TMP
PID_SS=`get_pid_by_keyword $FILE_TMP $SS_KEY`
echo "PID=$PID_SS"
KEYWORDS_EXPAND="$KEYWORDS|  $PID_SS  "
echo $KEYWORDS_EXPAND
echo "----------------------------------------------------------------------------------------------------------"
grep -ainE "${KEYWORDS_EXPAND}" ${FILE_TMP} --color=auto


PARA_ADD=$PARA_ADD$CHATTY_LOG
echo $PARA_ADD
fileo=ss.${file}
KEYWORDS_FILE="${KEYWORDS}|stationservice|stationclient${PARA_ADD}"
echo $KEYWORDS_FILE
grep -aiE "${KEYWORDS_FILE}" ${file} > ${fileo}
echo "output in ${fileo}"

echo ""
echo "----------------------------------------------------------------------------------------------------------"

#0. hardware info
KEY_H="come in wakeup, "
OS_VERSION=`grep -aiE $KEY_H ${file} | head -n 1`
OS_VERSION=`echo ${OS_VERSION#*come in wakeup, }`
echo -e "\033[32m HW_INFO: \t${OS_VERSION} \033[0m"

#1. os version
OS_VERSION=`grep -aiE 'os_rom_version' ${file} | head -n 1`
OS_VERSION=`echo -e ${OS_VERSION} | sed 's/"//g'`
OS_VERSION=`echo -e ${OS_VERSION} | sed 's/:/=/g'`
OS_VERSION=`echo -e ${OS_VERSION} | sed 's/&/,/g'`
OS_VERSION=`echo ${OS_VERSION#*os_rom_version=}`
OS_VERSION=${OS_VERSION%%,*}
echo -e "\033[32m OS_VERSION: \t${OS_VERSION}\033[0m"

#2. station version
STATION_KEYWORD="DEVINFO:"
STAION_VERSION_ORI=`grep -aE $STATION_KEYWORD ${file} | sort -u`
for i in $STAION_VERSION_ORI
do
    STATION_VER=`echo ${i#*$STATION_KEYWORD} | tr -d " "`
    #ignore null line
    if [[ $STATION_VER = "" ]];then
        continue
    fi
    #ignore the same version 
    res=$(echo $STATION_VERSION | grep "${STATION_VER: 0:6}")
    if [[ "$res" = "" ]];then
        if [[ $STATION_VERSION = "" ]];then
            STATION_VERSION=${STATION_VER: 0:6}
        else
            STATION_VERSION=${STATION_VERSION},${STATION_VER: 0:6}
        fi
    fi
done
echo -e "\033[32m STATION: \t$STATION_VERSION \033[0m"

CONTROLLER_KEYWORD="controller info:"
ORI=`grep -aiE $CONTROLLER_KEYWORD ${file}`
if [[ "$ORI" = "" ]];then
    CONTROLLER_KEYWORD="get_imu_cali_thread "
fi
controller_info_get $CONTROLLER_KEYWORD $file



IFS=$SAVEIFS

